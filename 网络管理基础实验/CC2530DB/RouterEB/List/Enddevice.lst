###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.51A/W32 for 8051                18/Aug/2012  10:44:08 #
# Copyright 2004-2009 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\GenericApp\Source\Enddevice.c #
#    Command line       =  -f "C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0 #
#                          \Projects\zstack\Samples\GenericApp\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ      #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DRTR_NWK -DBLINK_LEDS) -f "C:\Texas             #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\Tools\CC2 #
#                          530DB\f8wConfig.cfg" (-DSECURE=0                   #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\GenericApp\Source\Enddevice. #
#                          c" -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D        #
#                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC "C:\Texas   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\RouterEB\List\"    #
#                          -lA "C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Samples\GenericApp\CC2530DB\Rout #
#                          erEB\List\" --diag_suppress Pe001,Pa010 -o         #
#                          "C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\GenericApp\CC2530DB\RouterEB #
#                          \Obj\" -e --require_prototypes --debug             #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Texas                  #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\" -I "C:\Texas     #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\SOURCE\" -I     #
#                          "C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\GenericApp\CC2530DB\..\..\.. #
#                          \ZMAIN\TI2530DB\" -I "C:\Texas                     #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MT\" -I "C:\Texas                          #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\HAL\INCLUDE\" -I "C:\Texas                 #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\HAL\TARGET\CC2530EB\" -I "C:\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\OSAL\MCU\CCSOC\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\OSAL\INCLUDE\" -I "C:\Texas                #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\AF\" -I "C:\Texas                    #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\NWK\" -I "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\SEC\" -I "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\SAPI\" -I "C:\Texas                  #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\SYS\" -I "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\ZDO\" -I "C:\Texas                   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\ZMAC\F8W\" -I "C:\Texas                    #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\ZMAC\" -I "C:\Texas                        #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\SERVICES\SADDR\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\SERVICES\SDATA\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\INCLUDE\" -I "C:\Texas                 #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\HIGH_LEVEL\" -I "C:\Texas              #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\LOW_LEVEL\srf04\" -I "C:\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\GenericApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -I       #
#                          "C:\Program Files\IAR Systems\Embedded Workbench   #
#                          5.3 Evaluation version\8051\INC\" -I "C:\Program   #
#                          Files\IAR Systems\Embedded Workbench 5.3           #
#                          Evaluation version\8051\INC\CLIB\" -Ohz            #
#    List file          =  C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\GenericApp\CC2530DB\RouterEB\ #
#                          List\Enddevice.lst                                 #
#    Object file        =  C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\GenericApp\CC2530DB\RouterEB\ #
#                          Obj\Enddevice.r51                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\GenericApp\Source\Enddevice.c
      1          #include "OSAL.h"
      2          #include "AF.h"
      3          #include "ZDApp.h"
      4          #include "ZDObject.h"
      5          #include "ZDProfile.h"
      6          #include <string.h>
      7          
      8          #include "Coordinator.h"
      9          
     10          #include "DebugTrace.h"
     11          #if !defined(WIN32)
     12          #include "OnBoard.h"
     13          #endif
     14          
     15          #include "hal_led.h"
     16          #include "hal_lcd.h"
     17          #include "hal_key.h"
     18          #include "hal_uart.h"
     19          //#include "Sensor.h"
     20          #include "aps_groups.h"
     21          #define  SHOW_INFO_EVENT 0x01

   \                                 In  segment XDATA_ROM_C, align 1
     22          const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS]={
   \                     GenericApp_ClusterList:
   \   000000   0100         DW 1
     23          GENERICAPP_CLUSTERID  \
     24           };
     25          

   \                                 In  segment XDATA_ROM_C, align 1
     26          const SimpleDescriptionFormat_t GenericApp_SimpleDesc=
   \                     GenericApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F0100     DW 3844, 1
   \   000005   0000         DB 0, 0
   \   000007   0000         DW 0H
   \   000009   01           DB 1
   \   00000A   ....         DW GenericApp_ClusterList
     27          {
     28            GENERICAPP_ENDPOINT,
     29            GENERICAPP_PROFID,
     30            GENERICAPP_DEVICEID,
     31            GENERICAPP_DEVICE_VERSION,
     32            GENERICAPP_FLAGS,
     33            0,
     34            (cId_t *)NULL,
     35            GENERICAPP_MAX_CLUSTERS,
     36            (cId_t *)GenericApp_ClusterList,
     37          };

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     38          endPointDesc_t GenericApp_epDesc;
   \                     GenericApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39          byte GenericApp_TaskID;
   \                     GenericApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     40          byte GenericApp_TransID;
   \                     GenericApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     41          devStates_t GenericApp_NwkState;
   \                     GenericApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     42          aps_Group_t GenericApp_Group;
   \                     GenericApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
     43          
     44          void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pckt);
     45          void GenericApp_SendTheMessage(void);
     46          void ShowInfo(void);
     47          void To_string(uint8 *dest,char *src,uint8 length);
     48          typedef struct RFTXBUF
     49          {
     50          	uint8 myNWK[4];
     51          	uint8 myMAC[16];
     52          	uint8 pNWK[4];
     53          	uint8 pMAC[16];
     54          	
     55          }RFTX;
     56          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     57          void GenericApp_Init(byte task_id)
   \                     GenericApp_Init:
     58          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV     A,#-0x1d
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
     59          
     60          	halUARTCfg_t uartConfig;
     61          
     62          	GenericApp_TaskID		=task_id;
   \   000009   E9           MOV     A,R1
   \   00000A   90....       MOV     DPTR,#GenericApp_TaskID
   \   00000D   F0           MOVX    @DPTR,A
     63          	GenericApp_NwkState	=DEV_INIT;
   \   00000E   7401         MOV     A,#0x1
   \   000010   90....       MOV     DPTR,#GenericApp_NwkState
   \   000013   F0           MOVX    @DPTR,A
     64          	GenericApp_TransID		=0;
   \   000014   E4           CLR     A
   \   000015   90....       MOV     DPTR,#GenericApp_TransID
   \   000018   F0           MOVX    @DPTR,A
     65          	GenericApp_epDesc.endPoint=GENERICAPP_ENDPOINT;
   \   000019   740A         MOV     A,#0xa
   \   00001B   90....       MOV     DPTR,#GenericApp_epDesc
   \   00001E   F0           MOVX    @DPTR,A
     66          	GenericApp_epDesc.task_id=&GenericApp_TaskID;
   \   00001F   90....       MOV     DPTR,#(GenericApp_epDesc + 1)
   \   000022   74..         MOV     A,#(GenericApp_TaskID & 0xff)
   \   000024   F0           MOVX    @DPTR,A
   \   000025   A3           INC     DPTR
   \   000026   74..         MOV     A,#((GenericApp_TaskID >> 8) & 0xff)
   \   000028   F0           MOVX    @DPTR,A
     67          	GenericApp_epDesc.simpleDesc=(SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
   \   000029   90....       MOV     DPTR,#(GenericApp_epDesc + 3)
   \   00002C   74..         MOV     A,#(GenericApp_SimpleDesc & 0xff)
   \   00002E   F0           MOVX    @DPTR,A
   \   00002F   A3           INC     DPTR
   \   000030   74..         MOV     A,#((GenericApp_SimpleDesc >> 8) & 0xff)
   \   000032   F0           MOVX    @DPTR,A
     68          	GenericApp_epDesc.latencyReq=noLatencyReqs;
   \   000033   E4           CLR     A
   \   000034   90....       MOV     DPTR,#(GenericApp_epDesc + 5)
   \   000037   F0           MOVX    @DPTR,A
     69          	afRegister(&GenericApp_epDesc);
   \   000038                ; Setup parameters for call to function afRegister
   \   000038   7A..         MOV     R2,#(GenericApp_epDesc & 0xff)
   \   00003A   7B..         MOV     R3,#((GenericApp_epDesc >> 8) & 0xff)
   \   00003C   12....       LCALL   ??afRegister?relay
     70          	/*GenericApp_Group.ID=0x0001;
     71          	GenericApp_Group.name[0]=6;
     72          	osal_memcpy(&(GenericApp_Group.name[1]),"Group1",6);
     73          	*/
     74          	uartConfig.configured		=TRUE;
   \   00003F   7401         MOV     A,#0x1
   \   000041   85..82       MOV     DPL,?XSP + 0
   \   000044   85..83       MOV     DPH,?XSP + 1
   \   000047   F0           MOVX    @DPTR,A
     75          	uartConfig.baudRate		=HAL_UART_BR_115200;
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   7404         MOV     A,#0x4
   \   00004D   F0           MOVX    @DPTR,A
     76          	uartConfig.flowControl		=FALSE;
   \   00004E   7402         MOV     A,#0x2
   \   000050   12....       LCALL   ?XSTACK_DISP0_8
   \   000053   E4           CLR     A
   \   000054   F0           MOVX    @DPTR,A
     77          	uartConfig.callBackFunc		=NULL;
   \   000055   741B         MOV     A,#0x1b
   \   000057   12....       LCALL   ?XSTACK_DISP0_8
   \   00005A   E4           CLR     A
   \   00005B   F0           MOVX    @DPTR,A
   \   00005C   A3           INC     DPTR
   \   00005D   F0           MOVX    @DPTR,A
     78          	HalUARTOpen(0,&uartConfig);
   \   00005E                ; Setup parameters for call to function HalUARTOpen
   \   00005E   85..82       MOV     DPL,?XSP + 0
   \   000061   85..83       MOV     DPH,?XSP + 1
   \   000064   AA82         MOV     R2,DPL
   \   000066   AB83         MOV     R3,DPH
   \   000068   F9           MOV     R1,A
   \   000069   12....       LCALL   ??HalUARTOpen?relay
     79          	
     80          	
     81          }
   \   00006C   741D         MOV     A,#0x1d
   \   00006E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000071   D083         POP     DPH
   \   000073   D082         POP     DPL
   \   000075   02....       LJMP    ?BRET
     82          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     83          UINT16 GenericApp_ProcessEvent(byte tadk_id,UINT16 events)
   \                     GenericApp_ProcessEvent:
     84          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     85          	afIncomingMSGPacket_t *MSGpkt;
     86          	if(events&SYS_EVENT_MSG)
   \   000009   7480         MOV     A,#-0x80
   \   00000B   55..         ANL     A,?V0 + 1
   \   00000D   F9           MOV     R1,A
   \   00000E   E4           CLR     A
   \   00000F   7001         JNZ     ??GenericApp_ProcessEvent_0
   \   000011   E9           MOV     A,R1
   \                     ??GenericApp_ProcessEvent_0:
   \   000012   605D         JZ      ??GenericApp_ProcessEvent_1
     87          		{
     88          			MSGpkt=(afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);
   \   000014                ; Setup parameters for call to function osal_msg_receive
   \   000014   8021         SJMP    ??GenericApp_ProcessEvent_2
     89          			while(MSGpkt)
     90          				{
     91          					switch(MSGpkt->hdr.event)
     92          						{
     93          							case AF_INCOMING_MSG_CMD:
     94          								GenericApp_MessageMSGCB(MSGpkt);
     95          								break;
     96          						      	case ZDO_STATE_CHANGE:
     97          									GenericApp_NwkState=(devStates_t)(MSGpkt->hdr.status);
   \                     ??GenericApp_ProcessEvent_3:
   \   000016   8E82         MOV     DPL,R6
   \   000018   8F83         MOV     DPH,R7
   \   00001A   A3           INC     DPTR
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   90....       MOV     DPTR,#GenericApp_NwkState
   \   00001F   F0           MOVX    @DPTR,A
     98          									if(GenericApp_NwkState==DEV_ROUTER)
   \   000020   6407         XRL     A,#0x7
   \   000022   700C         JNZ     ??GenericApp_ProcessEvent_4
     99          										{
    100          											//	aps_AddGroup(GENERICAPP_ENDPOINT,&GenericApp_Group);
    101          											osal_set_event(GenericApp_TaskID,SHOW_INFO_EVENT);
   \   000024                ; Setup parameters for call to function osal_set_event
   \   000024   7A01         MOV     R2,#0x1
   \   000026   7B00         MOV     R3,#0x0
   \   000028   90....       MOV     DPTR,#GenericApp_TaskID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??osal_set_event?relay
    102          											
    103          										}
    104          									break;
    105          								
    106          						        default:
    107          									break;
    108          						}
    109          					osal_msg_deallocate((uint8 *) MSGpkt);
   \                     ??GenericApp_ProcessEvent_4:
   \   000030                ; Setup parameters for call to function osal_msg_deallocate
   \   000030   EE           MOV     A,R6
   \   000031   FA           MOV     R2,A
   \   000032   EF           MOV     A,R7
   \   000033   FB           MOV     R3,A
   \   000034   12....       LCALL   ??osal_msg_deallocate?relay
    110          					MSGpkt=(afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);
   \   000037                ; Setup parameters for call to function osal_msg_receive
   \                     ??GenericApp_ProcessEvent_2:
   \   000037   90....       MOV     DPTR,#GenericApp_TaskID
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   F9           MOV     R1,A
   \   00003C   12....       LCALL   ??osal_msg_receive?relay
   \   00003F   8A..         MOV     ?V0 + 2,R2
   \   000041   8B..         MOV     ?V0 + 3,R3
   \   000043   AE..         MOV     R6,?V0 + 2
   \   000045   AF..         MOV     R7,?V0 + 3
   \   000047   EE           MOV     A,R6
   \   000048   7001         JNZ     ??GenericApp_ProcessEvent_5
   \   00004A   EF           MOV     A,R7
   \                     ??GenericApp_ProcessEvent_5:
   \   00004B   601B         JZ      ??GenericApp_ProcessEvent_6
   \   00004D   8E82         MOV     DPL,R6
   \   00004F   8F83         MOV     DPH,R7
   \   000051   E0           MOVX    A,@DPTR
   \   000052   12....       LCALL   ?UC_SWITCH_SPARSE
   \                     `?<Jumptable for GenericApp_ProcessEvent>_0`:
   \   000055   00           DB        0
   \   000056   02           DB        2
   \   000057   1A           DB        26
   \   000058   ....         DW        ??GenericApp_ProcessEvent_7
   \   00005A   D1           DB        209
   \   00005B   ....         DW        ??GenericApp_ProcessEvent_3
   \   00005D   ....         DW        ??GenericApp_ProcessEvent_4
   \                     ??GenericApp_ProcessEvent_7:
   \   00005F                ; Setup parameters for call to function GenericApp_MessageMSGCB
   \   00005F   EE           MOV     A,R6
   \   000060   FA           MOV     R2,A
   \   000061   EF           MOV     A,R7
   \   000062   FB           MOV     R3,A
   \   000063   12....       LCALL   ??GenericApp_MessageMSGCB?relay
   \   000066   80C8         SJMP    ??GenericApp_ProcessEvent_4
    111          				}
    112          			return (events ^SYS_EVENT_MSG);
   \                     ??GenericApp_ProcessEvent_6:
   \   000068   AA..         MOV     R2,?V0 + 0
   \   00006A   7480         MOV     A,#-0x80
   \   00006C   65..         XRL     A,?V0 + 1
   \   00006E   FB           MOV     R3,A
   \   00006F   8025         SJMP    ??GenericApp_ProcessEvent_8
    113          		
    114          		}
    115          	if(events&SHOW_INFO_EVENT)
   \                     ??GenericApp_ProcessEvent_1:
   \   000071   EA           MOV     A,R2
   \   000072   A2E0         MOV     C,0xE0 /* A   */.0
   \   000074   501C         JNC     ??GenericApp_ProcessEvent_9
    116          		{
    117          			ShowInfo();
   \   000076                ; Setup parameters for call to function ShowInfo
   \   000076   12....       LCALL   ??ShowInfo?relay
    118          			osal_start_timerEx(GenericApp_TaskID, SHOW_INFO_EVENT, 5000);
   \   000079                ; Setup parameters for call to function osal_start_timerEx
   \   000079   7C88         MOV     R4,#-0x78
   \   00007B   7D13         MOV     R5,#0x13
   \   00007D   7A01         MOV     R2,#0x1
   \   00007F   7B00         MOV     R3,#0x0
   \   000081   90....       MOV     DPTR,#GenericApp_TaskID
   \   000084   E0           MOVX    A,@DPTR
   \   000085   F9           MOV     R1,A
   \   000086   12....       LCALL   ??osal_start_timerEx?relay
    119          			return (events^SHOW_INFO_EVENT);
   \   000089   7401         MOV     A,#0x1
   \   00008B   65..         XRL     A,?V0 + 0
   \   00008D   FA           MOV     R2,A
   \   00008E   AB..         MOV     R3,?V0 + 1
   \   000090   8004         SJMP    ??GenericApp_ProcessEvent_8
    120          		}
    121          
    122          	return 0;
   \                     ??GenericApp_ProcessEvent_9:
   \   000092   7A00         MOV     R2,#0x0
   \   000094   7B00         MOV     R3,#0x0
   \                     ??GenericApp_ProcessEvent_8:
   \   000096                REQUIRE ?Subroutine5
   \   000096                ; // Fall through to label ?Subroutine5
    123          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    124          void ShowInfo(void)
   \                     ShowInfo:
    125          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 52
   \   000005   74CC         MOV     A,#-0x34
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    126          	RFTX rftx;
    127          	uint16 nwk;
    128          	uint8 buf[8];
    129          	uint8 changeline[2]={0x0A,0x0D};
   \   00000A   7402         MOV     A,#0x2
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   AC82         MOV     R4,DPL
   \   000011   AD83         MOV     R5,DPH
   \   000013   7583..       MOV     DPH,#((`?<Constant {10, 13}>` >> 8) & 0xff)
   \   000016   7582..       MOV     DPL,#(`?<Constant {10, 13}>` & 0xff)
   \   000019   7402         MOV     A,#0x2
   \   00001B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    130          	nwk=NLME_GetShortAddr();
   \   00001E                ; Setup parameters for call to function NLME_GetShortAddr
   \   00001E   12....       LCALL   ??NLME_GetShortAddr?relay
   \   000021   12....       LCALL   ?Subroutine1 & 0xFFFF
    131          	To_string(rftx.myNWK,(uint8 *)&nwk,2);
                 	                     ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??CrossCallReturnLabel_2:
   \   000024   740C         MOV     A,#0xc
   \   000026   12....       LCALL   ?XSTACK_DISP0_8
   \   000029   AA82         MOV     R2,DPL
   \   00002B   AB83         MOV     R3,DPH
   \   00002D   12....       LCALL   ??To_string?relay
    132          	To_string(rftx.myMAC,NLME_GetExtAddr(),8);
                 	                     ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000030                ; Setup parameters for call to function To_string
   \   000030                ; Setup parameters for call to function NLME_GetExtAddr
   \   000030   12....       LCALL   ??NLME_GetExtAddr?relay
   \   000033   EA           MOV     A,R2
   \   000034   FC           MOV     R4,A
   \   000035   EB           MOV     A,R3
   \   000036   FD           MOV     R5,A
   \   000037   7908         MOV     R1,#0x8
   \   000039   7410         MOV     A,#0x10
   \   00003B   12....       LCALL   ?XSTACK_DISP0_8
   \   00003E   AA82         MOV     R2,DPL
   \   000040   AB83         MOV     R3,DPH
   \   000042   12....       LCALL   ??To_string?relay
    133          	nwk=NLME_GetCoordShortAddr();
   \   000045                ; Setup parameters for call to function NLME_GetCoordShortAddr
   \   000045   12....       LCALL   ??NLME_GetCoordShortAddr?relay
   \   000048   12....       LCALL   ?Subroutine1 & 0xFFFF
    134          	To_string(rftx.pNWK,(uint8 *)&nwk,2);
                 	                    ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??CrossCallReturnLabel_3:
   \   00004B   7420         MOV     A,#0x20
   \   00004D   12....       LCALL   ?XSTACK_DISP0_8
   \   000050   AA82         MOV     R2,DPL
   \   000052   AB83         MOV     R3,DPH
   \   000054   12....       LCALL   ??To_string?relay
    135          	NLME_GetCoordExtAddr(buf);
   \   000057                ; Setup parameters for call to function NLME_GetCoordExtAddr
   \   000057   7404         MOV     A,#0x4
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   AA82         MOV     R2,DPL
   \   00005E   AB83         MOV     R3,DPH
   \   000060   12....       LCALL   ??NLME_GetCoordExtAddr?relay
    136          	To_string(rftx.pMAC,buf,8);
                 	                    ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000063                ; Setup parameters for call to function To_string
   \   000063   7908         MOV     R1,#0x8
   \   000065   7404         MOV     A,#0x4
   \   000067   12....       LCALL   ?XSTACK_DISP0_8
   \   00006A   AC82         MOV     R4,DPL
   \   00006C   AD83         MOV     R5,DPH
   \   00006E   7424         MOV     A,#0x24
   \   000070   12....       LCALL   ?XSTACK_DISP0_8
   \   000073   AA82         MOV     R2,DPL
   \   000075   AB83         MOV     R3,DPH
   \   000077   12....       LCALL   ??To_string?relay
    137          	HalUARTWrite(0,"NWK:",osal_strlen(" NWK:"));
   \   00007A                ; Setup parameters for call to function HalUARTWrite
   \   00007A                ; Setup parameters for call to function osal_strlen
   \   00007A   7A..         MOV     R2,#(`?<Constant " NWK:">` & 0xff)
   \   00007C   7B..         MOV     R3,#((`?<Constant " NWK:">` >> 8) & 0xff)
   \   00007E   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000081   7A..         MOV     R2,#(`?<Constant "NWK:">` & 0xff)
   \   000083   7B..         MOV     R3,#((`?<Constant "NWK:">` >> 8) & 0xff)
   \   000085   7900         MOV     R1,#0x0
   \   000087   12....       LCALL   ??HalUARTWrite?relay
    138          	HalUARTWrite(0,rftx.myNWK,4);
   \   00008A                ; Setup parameters for call to function HalUARTWrite
   \   00008A   7C04         MOV     R4,#0x4
   \   00008C   7D00         MOV     R5,#0x0
   \   00008E   740C         MOV     A,#0xc
   \   000090   12....       LCALL   ?XSTACK_DISP0_8
   \   000093   AA82         MOV     R2,DPL
   \   000095   AB83         MOV     R3,DPH
   \   000097   7900         MOV     R1,#0x0
   \   000099   12....       LCALL   ??HalUARTWrite?relay
    139          	
    140          	HalUARTWrite(0," MAC:",osal_strlen(" MAC:"));
   \   00009C                ; Setup parameters for call to function HalUARTWrite
   \   00009C                ; Setup parameters for call to function osal_strlen
   \   00009C   7A..         MOV     R2,#(`?<Constant " MAC:">` & 0xff)
   \   00009E   7B..         MOV     R3,#((`?<Constant " MAC:">` >> 8) & 0xff)
   \   0000A0   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   0000A3   7A..         MOV     R2,#(`?<Constant " MAC:">` & 0xff)
   \   0000A5   7B..         MOV     R3,#((`?<Constant " MAC:">` >> 8) & 0xff)
   \   0000A7   7900         MOV     R1,#0x0
   \   0000A9   12....       LCALL   ??HalUARTWrite?relay
    141          	HalUARTWrite(0,rftx.myMAC,16);
   \   0000AC                ; Setup parameters for call to function HalUARTWrite
   \   0000AC   7C10         MOV     R4,#0x10
   \   0000AE   7D00         MOV     R5,#0x0
   \   0000B0   EC           MOV     A,R4
   \   0000B1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B4   AA82         MOV     R2,DPL
   \   0000B6   AB83         MOV     R3,DPH
   \   0000B8   7900         MOV     R1,#0x0
   \   0000BA   12....       LCALL   ??HalUARTWrite?relay
    142          	
    143          	HalUARTWrite(0," p-NWK:",osal_strlen(" p-NWk"));
   \   0000BD                ; Setup parameters for call to function HalUARTWrite
   \   0000BD                ; Setup parameters for call to function osal_strlen
   \   0000BD   7A..         MOV     R2,#(`?<Constant " p-NWk">` & 0xff)
   \   0000BF   7B..         MOV     R3,#((`?<Constant " p-NWk">` >> 8) & 0xff)
   \   0000C1   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   0000C4   7A..         MOV     R2,#(`?<Constant " p-NWK:">` & 0xff)
   \   0000C6   7B..         MOV     R3,#((`?<Constant " p-NWK:">` >> 8) & 0xff)
   \   0000C8   7900         MOV     R1,#0x0
   \   0000CA   12....       LCALL   ??HalUARTWrite?relay
    144          	HalUARTWrite(0,rftx.pNWK,4);
   \   0000CD                ; Setup parameters for call to function HalUARTWrite
   \   0000CD   7C04         MOV     R4,#0x4
   \   0000CF   7D00         MOV     R5,#0x0
   \   0000D1   7420         MOV     A,#0x20
   \   0000D3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D6   AA82         MOV     R2,DPL
   \   0000D8   AB83         MOV     R3,DPH
   \   0000DA   7900         MOV     R1,#0x0
   \   0000DC   12....       LCALL   ??HalUARTWrite?relay
    145          	HalUARTWrite(0," p-MAC:",osal_strlen(" p-MAC"));
   \   0000DF                ; Setup parameters for call to function HalUARTWrite
   \   0000DF                ; Setup parameters for call to function osal_strlen
   \   0000DF   7A..         MOV     R2,#(`?<Constant " p-MAC">` & 0xff)
   \   0000E1   7B..         MOV     R3,#((`?<Constant " p-MAC">` >> 8) & 0xff)
   \   0000E3   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   0000E6   7A..         MOV     R2,#(`?<Constant " p-MAC:">` & 0xff)
   \   0000E8   7B..         MOV     R3,#((`?<Constant " p-MAC:">` >> 8) & 0xff)
   \   0000EA   7900         MOV     R1,#0x0
   \   0000EC   12....       LCALL   ??HalUARTWrite?relay
    146          	HalUARTWrite(0,rftx.pMAC,16);
   \   0000EF                ; Setup parameters for call to function HalUARTWrite
   \   0000EF   7C10         MOV     R4,#0x10
   \   0000F1   7D00         MOV     R5,#0x0
   \   0000F3   7424         MOV     A,#0x24
   \   0000F5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F8   AA82         MOV     R2,DPL
   \   0000FA   AB83         MOV     R3,DPH
   \   0000FC   7900         MOV     R1,#0x0
   \   0000FE   12....       LCALL   ??HalUARTWrite?relay
    147          	
    148          	HalUARTWrite(0,changeline,2);
   \   000101                ; Setup parameters for call to function HalUARTWrite
   \   000101   7C02         MOV     R4,#0x2
   \   000103   7D00         MOV     R5,#0x0
   \   000105   EC           MOV     A,R4
   \   000106   12....       LCALL   ?XSTACK_DISP0_8
   \   000109   AA82         MOV     R2,DPL
   \   00010B   AB83         MOV     R3,DPH
   \   00010D   7900         MOV     R1,#0x0
   \   00010F   12....       LCALL   ??HalUARTWrite?relay
    149          	
    150          	
    151          	
    152          	
    153          }
   \   000112   7434         MOV     A,#0x34
   \   000114   12....       LCALL   ?DEALLOC_XSTACK8
   \   000117   7F01         MOV     R7,#0x1
   \   000119   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ??osal_strlen?relay
   \   000003   EA           MOV     A,R2
   \   000004   FC           MOV     R4,A
   \   000005   EB           MOV     A,R3
   \   000006   FD           MOV     R5,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   EA           MOV     A,R2
   \   000007   F0           MOVX    @DPTR,A
   \   000008   A3           INC     DPTR
   \   000009   EB           MOV     A,R3
   \   00000A   F0           MOVX    @DPTR,A
   \   00000B                ; Setup parameters for call to function To_string
   \   00000B                ; Setup parameters for call to function To_string
   \   00000B   7902         MOV     R1,#0x2
   \   00000D   85..82       MOV     DPL,?XSP + 0
   \   000010   85..83       MOV     DPH,?XSP + 1
   \   000013   AC82         MOV     R4,DPL
   \   000015   AD83         MOV     R5,DPH
   \   000017   22           RET
    154          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    155          void To_string(uint8 * dest, char * src, uint8 length)
   \                     To_string:
    156          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
    157          	uint8 *xad;
    158          	uint8 i=0;
    159          	uint8 ch;
    160          	xad=src+length-1;
                 	   ^
Warning[Pe513]: a value of type "char *" cannot be assigned to an entity of
          type "unsigned char *"
   \   000007   89..         MOV     ?V0 + 2,R1
   \   000009   EC           MOV     A,R4
   \   00000A   25..         ADD     A,?V0 + 2
   \   00000C   F8           MOV     R0,A
   \   00000D   ED           MOV     A,R5
   \   00000E   3400         ADDC    A,#0x0
   \   000010   F9           MOV     R1,A
   \   000011   74FF         MOV     A,#-0x1
   \   000013   28           ADD     A,R0
   \   000014   18           DEC     R0
   \   000015   74FF         MOV     A,#-0x1
   \   000017   39           ADDC    A,R1
   \   000018   F9           MOV     R1,A
    161          	for(i=0;i<length;i++,xad--)
   \   000019   75..00       MOV     ?V0 + 1,#0x0
   \   00001C   8015         SJMP    ??To_string_0
    162          		{
    163          			ch=(*xad>>4)&0x0F;
    164          			dest[i<<1]=ch+((ch<10)?'0':'7');
    165          			ch=*xad&0x0F;
    166          			dest[(i<<1)+1]=ch+((ch<10)?'0':'7');
   \                     ??To_string_1:
   \   00001E   7E37         MOV     R6,#0x37
   \                     ??To_string_2:
   \   000020   EE           MOV     A,R6
   \   000021   25..         ADD     A,?V0 + 2
   \   000023   8C82         MOV     DPL,R4
   \   000025   8D83         MOV     DPH,R5
   \   000027   A3           INC     DPTR
   \   000028   F0           MOVX    @DPTR,A
   \   000029   05..         INC     ?V0 + 1
   \   00002B   E8           MOV     A,R0
   \   00002C   24FF         ADD     A,#-0x1
   \   00002E   18           DEC     R0
   \   00002F   E9           MOV     A,R1
   \   000030   34FF         ADDC    A,#-0x1
   \   000032   F9           MOV     R1,A
   \                     ??To_string_0:
   \   000033   E5..         MOV     A,?V0 + 1
   \   000035   C3           CLR     C
   \   000036   95..         SUBB    A,?V0 + 0
   \   000038   503D         JNC     ??To_string_3
   \   00003A   8882         MOV     DPL,R0
   \   00003C   8983         MOV     DPH,R1
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   C4           SWAP    A
   \   000040   540F         ANL     A,#0xf
   \   000042   F5..         MOV     ?V0 + 2,A
   \   000044   C3           CLR     C
   \   000045   940A         SUBB    A,#0xa
   \   000047   5004         JNC     ??To_string_4
   \   000049   7E30         MOV     R6,#0x30
   \   00004B   8002         SJMP    ??To_string_5
   \                     ??To_string_4:
   \   00004D   7E37         MOV     R6,#0x37
   \                     ??To_string_5:
   \   00004F   E5..         MOV     A,?V0 + 1
   \   000051   C3           CLR     C
   \   000052   33           RLC     A
   \   000053   FC           MOV     R4,A
   \   000054   E4           CLR     A
   \   000055   33           RLC     A
   \   000056   FD           MOV     R5,A
   \   000057   EA           MOV     A,R2
   \   000058   2C           ADD     A,R4
   \   000059   FC           MOV     R4,A
   \   00005A   EB           MOV     A,R3
   \   00005B   3D           ADDC    A,R5
   \   00005C   FD           MOV     R5,A
   \   00005D   EE           MOV     A,R6
   \   00005E   25..         ADD     A,?V0 + 2
   \   000060   8C82         MOV     DPL,R4
   \   000062   8D83         MOV     DPH,R5
   \   000064   F0           MOVX    @DPTR,A
   \   000065   8882         MOV     DPL,R0
   \   000067   8983         MOV     DPH,R1
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   540F         ANL     A,#0xf
   \   00006C   F5..         MOV     ?V0 + 2,A
   \   00006E   C3           CLR     C
   \   00006F   940A         SUBB    A,#0xa
   \   000071   50AB         JNC     ??To_string_1
   \   000073   7E30         MOV     R6,#0x30
   \   000075   80A9         SJMP    ??To_string_2
    167          			
    168          		}
    169          }
   \                     ??To_string_3:
   \   000077   02....       LJMP    ?Subroutine5 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    170          void GenericApp_MessageMSGCB(afIncomingMSGPacket_t * pkt)
   \                     GenericApp_MessageMSGCB:
    171          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 18
   \   000005   74EE         MOV     A,#-0x12
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    172          	char buf[18];
    173          	switch(pkt->clusterId)
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   6401         XRL     A,#0x1
   \   000015   7002         JNZ     ??GenericApp_MessageMSGCB_0
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \                     ??GenericApp_MessageMSGCB_0:
   \   000019   7068         JNZ     ??GenericApp_MessageMSGCB_1
    174          		{
    175                          case GENERICAPP_CLUSTERID:
    176          				osal_memcpy(buf,pkt->cmd.Data,osal_strlen("Coordinator send!")+1);
   \   00001B                ; Setup parameters for call to function osal_memcpy
   \   00001B   EA           MOV     A,R2
   \   00001C   2421         ADD     A,#0x21
   \   00001E   F582         MOV     DPL,A
   \   000020   EB           MOV     A,R3
   \   000021   3400         ADDC    A,#0x0
   \   000023   F583         MOV     DPH,A
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F5..         MOV     ?V0 + 0,A
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F5..         MOV     ?V0 + 1,A
   \   00002C   75..00       MOV     ?V0 + 2,#0x0
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000034                ; Setup parameters for call to function osal_strlen
   \   000034   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000037   12....       LCALL   ?XSTACK_DISP0_8
   \   00003A   AA82         MOV     R2,DPL
   \   00003C   AB83         MOV     R3,DPH
   \   00003E   12....       LCALL   ??osal_memcpy?relay
   \   000041   7403         MOV     A,#0x3
   \   000043   12....       LCALL   ?DEALLOC_XSTACK8
    177          				HalUARTWrite(0, buf,osal_strlen("Coordinator send!")+1);
                 				                ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000046                ; Setup parameters for call to function HalUARTWrite
   \   000046                ; Setup parameters for call to function osal_strlen
   \   000046   7A..         MOV     R2,#(`?<Constant "Coordinator send!">` & 0xff)
   \   000048   7B..         MOV     R3,#((`?<Constant "Coordinator send!">` >> 8) & 0xff)
   \   00004A   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   00004D   FC           MOV     R4,A
   \   00004E   E4           CLR     A
   \   00004F   35..         ADDC    A,?V0 + 1
   \   000051   FD           MOV     R5,A
   \   000052   85..82       MOV     DPL,?XSP + 0
   \   000055   85..83       MOV     DPH,?XSP + 1
   \   000058   AA82         MOV     R2,DPL
   \   00005A   AB83         MOV     R3,DPH
   \   00005C   7900         MOV     R1,#0x0
   \   00005E   12....       LCALL   ??HalUARTWrite?relay
    178          				if(osal_memcmp(buf,"Coordinator send!",osal_strlen("Coordinator send!")+1));
   \   000061                ; Setup parameters for call to function osal_memcmp
   \   000061   75....       MOV     ?V0 + 0,#(`?<Constant "Coordinator send!">` & 0xff)
   \   000064   75....       MOV     ?V0 + 1,#((`?<Constant "Coordinator send!">` >> 8) & 0xff)
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00006C                ; Setup parameters for call to function osal_strlen
   \   00006C   12....       LCALL   ?Subroutine0 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00006F   12....       LCALL   ?XSTACK_DISP0_8
   \   000072   A982         MOV     R1,DPL
   \   000074   AA83         MOV     R2,DPH
   \   000076   7B00         MOV     R3,#0x0
   \   000078   12....       LCALL   ??osal_memcmp?relay
   \   00007B   7403         MOV     A,#0x3
   \   00007D   12....       LCALL   ?DEALLOC_XSTACK8
    179          					{
    180          						GenericApp_SendTheMessage();
   \   000080                ; Setup parameters for call to function GenericApp_SendTheMessage
   \   000080   12....       LCALL   ??GenericApp_SendTheMessage?relay
    181          					}
    182          				break;
    183          		}
    184          }
   \                     ??GenericApp_MessageMSGCB_1:
   \   000083   7412         MOV     A,#0x12
   \   000085   12....       LCALL   ?DEALLOC_XSTACK8
   \   000088   7F03         MOV     R7,#0x3
   \   00008A   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7A..         MOV     R2,#(`?<Constant "Coordinator send!">` & 0xff)
   \   000002   7B..         MOV     R3,#((`?<Constant "Coordinator send!">` >> 8) & 0xff)
   \   000004   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000007   FC           MOV     R4,A
   \   000008   E4           CLR     A
   \   000009   35..         ADDC    A,?V0 + 1
   \   00000B   FD           MOV     R5,A
   \   00000C   7403         MOV     A,#0x3
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ??osal_strlen?relay
   \   000003   8A..         MOV     ?V0 + 0,R2
   \   000005   8B..         MOV     ?V0 + 1,R3
   \   000007   7401         MOV     A,#0x1
   \   000009   25..         ADD     A,?V0 + 0
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    185          void GenericApp_SendTheMessage(void)
   \                     GenericApp_SendTheMessage:
    186          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    187          	unsigned char *theMessageData="Router received!";
    188          	afAddrType_t my_DstAddr;
    189          	my_DstAddr.addrMode=(afAddrMode_t)Addr16Bit;
   \   00000A   7408         MOV     A,#0x8
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   7402         MOV     A,#0x2
   \   000011   F0           MOVX    @DPTR,A
    190          	my_DstAddr.endPoint=GENERICAPP_ENDPOINT;
   \   000012   7409         MOV     A,#0x9
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   740A         MOV     A,#0xa
   \   000019   F0           MOVX    @DPTR,A
    191          	my_DstAddr.addr.shortAddr=0x0000;
   \   00001A   85..82       MOV     DPL,?XSP + 0
   \   00001D   85..83       MOV     DPH,?XSP + 1
   \   000020   E4           CLR     A
   \   000021   F0           MOVX    @DPTR,A
   \   000022   A3           INC     DPTR
   \   000023   F0           MOVX    @DPTR,A
    192          	AF_DataRequest(&my_DstAddr, &GenericApp_epDesc, GENERICAPP_CLUSTERID, 
    193          					osal_strlen((char *)theMessageData)+1,
    194          					theMessageData,
    195          					&GenericApp_TransID,
    196          					AF_DISCV_ROUTE,
    197          					AF_DEFAULT_RADIUS);
   \   000024   75....       MOV     ?V0 + 0,#(`?<Constant "Router received!">` & 0xff)
   \   000027   75....       MOV     ?V0 + 1,#((`?<Constant "Router received!">` >> 8) & 0xff)
   \   00002A                ; Setup parameters for call to function AF_DataRequest
   \   00002A   75..1E       MOV     ?V0 + 2,#0x1e
   \   00002D   78..         MOV     R0,#?V0 + 2
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000032   75....       MOV     ?V0 + 2,#(GenericApp_TransID & 0xff)
   \   000035   75....       MOV     ?V0 + 3,#((GenericApp_TransID >> 8) & 0xff)
   \   000038   78..         MOV     R0,#?V0 + 2
   \   00003A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000042                ; Setup parameters for call to function osal_strlen
   \   000042   7A..         MOV     R2,#(`?<Constant "Router received!">` & 0xff)
   \   000044   7B..         MOV     R3,#((`?<Constant "Router received!">` >> 8) & 0xff)
   \   000046   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000049   F5..         MOV     ?V0 + 0,A
   \   00004B   E4           CLR     A
   \   00004C   35..         ADDC    A,?V0 + 1
   \   00004E   F5..         MOV     ?V0 + 1,A
   \   000050   78..         MOV     R0,#?V0 + 0
   \   000052   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000055   75..01       MOV     ?V0 + 0,#0x1
   \   000058   75..00       MOV     ?V0 + 1,#0x0
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000060   7920         MOV     R1,#0x20
   \   000062   7C..         MOV     R4,#(GenericApp_epDesc & 0xff)
   \   000064   7D..         MOV     R5,#((GenericApp_epDesc >> 8) & 0xff)
   \   000066   7409         MOV     A,#0x9
   \   000068   12....       LCALL   ?XSTACK_DISP0_8
   \   00006B   AA82         MOV     R2,DPL
   \   00006D   AB83         MOV     R3,DPH
   \   00006F   12....       LCALL   ??AF_DataRequest?relay
   \   000072   7409         MOV     A,#0x9
   \   000074   12....       LCALL   ?DEALLOC_XSTACK8
    198          	HalLedSet(HAL_LED_2,HAL_LED_MODE_TOGGLE);
   \   000077                ; Setup parameters for call to function HalLedSet
   \   000077   7A08         MOV     R2,#0x8
   \   000079   7902         MOV     R1,#0x2
   \   00007B   12....       LCALL   ??HalLedSet?relay
    199          
    200          		
    201          }
   \   00007E   740C         MOV     A,#0xc
   \   000080   12....       LCALL   ?DEALLOC_XSTACK8
   \   000083   02....       LJMP    ?Subroutine5 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ShowInfo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ShowInfo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??To_string?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    To_string

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_SendTheMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_SendTheMessage

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {10, 13}>`:
   \   000000   0A0D         DB 10, 13

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "NWK:">`:
   \   000000   4E574B3A     DB "NWK:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " NWK:">`:
   \   000000   204E574B     DB " NWK:"
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " MAC:">`:
   \   000000   204D4143     DB " MAC:"
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " p-NWK:">`:
   \   000000   20702D4E     DB " p-NWK:"
   \            574B3A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " p-NWk">`:
   \   000000   20702D4E     DB " p-NWk"
   \            576B00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " p-MAC:">`:
   \   000000   20702D4D     DB " p-MAC:"
   \            41433A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " p-MAC">`:
   \   000000   20702D4D     DB " p-MAC"
   \            414300  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Coordinator send!">`:
   \   000000   436F6F72     DB "Coordinator send!"
   \            64696E61
   \            746F7220
   \            73656E64
   \            2100    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Router received!">`:
   \   000000   526F7574     DB "Router received!"
   \            65722072
   \            65636569
   \            76656421
   \            00      
    202          
    203          
    204          
    205          
    206          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     GenericApp_Init                    3      0     29
       -> afRegister                    4      0     58
       -> HalUARTOpen                   4      0     58
     GenericApp_MessageMSGCB            0      0     44
       -> osal_strlen                   0      0     64
       -> osal_memcpy                   0      0     64
       -> osal_strlen                   0      0     58
       -> HalUARTWrite                  0      0     58
       -> osal_strlen                   0      0     64
       -> osal_memcmp                   0      0     64
       -> GenericApp_SendTheMessage     0      0     58
     GenericApp_ProcessEvent            0      0     12
       -> osal_msg_receive              0      0     24
       -> osal_set_event                0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> GenericApp_MessageMSGCB       0      0     24
       -> ShowInfo                      0      0     24
       -> osal_start_timerEx            0      0     24
     GenericApp_SendTheMessage          1      0     62
       -> osal_strlen                   0      0     58
       -> AF_DataRequest                0      0     66
       -> HalLedSet                     0      0     48
     ShowInfo                           2      0     73
       -> NLME_GetShortAddr             0      0    122
       -> To_string                     0      0    122
       -> NLME_GetExtAddr               0      0    122
       -> To_string                     0      0    122
       -> NLME_GetCoordShortAddr        0      0    122
       -> To_string                     0      0    122
       -> NLME_GetCoordExtAddr          0      0    122
       -> To_string                     0      0    122
       -> osal_strlen                   0      0    122
       -> HalUARTWrite                  0      0    122
       -> HalUARTWrite                  0      0    122
       -> osal_strlen                   0      0    122
       -> HalUARTWrite                  0      0    122
       -> HalUARTWrite                  0      0    122
       -> osal_strlen                   0      0    122
       -> HalUARTWrite                  0      0    122
       -> HalUARTWrite                  0      0    122
       -> osal_strlen                   0      0    122
       -> HalUARTWrite                  0      0    122
       -> HalUARTWrite                  0      0    122
       -> HalUARTWrite                  0      0    122
     To_string                          1      0     73


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     GenericApp_ClusterList               2
     GenericApp_SimpleDesc               12
     GenericApp_epDesc                    6
     GenericApp_TaskID                    1
     GenericApp_TransID                   1
     GenericApp_NwkState                  1
     GenericApp_Group                    18
     GenericApp_Init                    120
     GenericApp_ProcessEvent            150
     ?Subroutine5                         5
     ShowInfo                           284
     ?Subroutine2                         8
     ?Subroutine1                        24
     To_string                          122
     GenericApp_MessageMSGCB            141
     ?Subroutine0                        15
     ?Subroutine3                         4
     ?Subroutine4                        12
     GenericApp_SendTheMessage          134
     ??GenericApp_Init?relay              6
     ??GenericApp_ProcessEvent?relay      6
     ??ShowInfo?relay                     6
     ??To_string?relay                    6
     ??GenericApp_MessageMSGCB?relay      6
     ??GenericApp_SendTheMessage?relay    6
     ?<Constant {10, 13}>                 2
     ?<Constant "NWK:">                   5
     ?<Constant " NWK:">                  6
     ?<Constant " MAC:">                  6
     ?<Constant " p-NWK:">                8
     ?<Constant " p-NWk">                 7
     ?<Constant " p-MAC:">                8
     ?<Constant " p-MAC">                 7
     ?<Constant "Coordinator send!">     18
     ?<Constant "Router received!">      17

 
 1 019 bytes in segment BANKED_CODE
    36 bytes in segment BANK_RELAYS
    98 bytes in segment XDATA_ROM_C
    27 bytes in segment XDATA_Z
 
 1 055 bytes of CODE  memory
    98 bytes of CONST memory
    27 bytes of XDATA memory

Errors: none
Warnings: 6
